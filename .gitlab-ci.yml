# i'll fix it :soon:
#
# image: naskpl/docker-compose
# 
# variables:
#   DOCKER_HOST: tcp://naskpl-dind:2375
#   GIT_SSL_NO_VERIFY: "true"
#   DOCKER_REGISTRY: dr.cert.pl
#   DOCKER_DRIVER: overlay2
# 
# services:
#   - naskpl/dind
# 
# stages:
#   - build
#   - deploy
# 
# before_script:
#   - echo "Start job $CI_BUILD_NAME" at `date +%Y-%m-%d-%H-%M-%S`
#   - echo "CI_PIPELINE_ID $CI_PIPELINE_ID"
#   - chmod +x build-image.sh
#   - apk update && apk add openssh-client git
#   - eval $(ssh-agent -s)
#   - echo "$GIT_DEPLOY_KEY" | tr -d '\r' | ssh-add - > /dev/null
#   - mkdir -p ~/.ssh
#   - chmod 700 ~/.ssh
#   - ssh-keyscan -H vcs.cert.pl >> ~/.ssh/known_hosts
#   - git submodule update --init --recursive
#   - docker login -u "$DOCKER_REGISTRY_LOGIN" -p "$DOCKER_REGISTRY_PASSWORD" "$DOCKER_REGISTRY"
# 
# build_classifier:
#   stage: build
#   script:
#     - ./build-image.sh "$DOCKER_REGISTRY/karton/classifier" "-f Dockerfile ."
# 
# deploy:
#   stage: deploy
#   when: manual
#   only:
#     - master
#   environment:
#     name: prod
#   script:
#     - apk add --no-cache curl
#     - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
#     - chmod +x kubectl
#     
#     - ./kubectl config set-cluster cert --server="https://kapi.cert.pl" --insecure-skip-tls-verify=true
#     - ./kubectl config set-credentials gitlab-ci --token "$KUBE_TOKEN"
#     - ./kubectl config set-context default --cluster=cert --user=gitlab-ci
#     - ./kubectl config use-context default
#     - ./kubectl -n karton-prod set image deployment.v1.apps/karton-classifier karton-classifier-container=dr.cert.pl/karton/classifier:$CI_COMMIT_SHA
# 
